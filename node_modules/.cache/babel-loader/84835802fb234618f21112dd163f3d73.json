{"ast":null,"code":"import _classCallCheck from \"H:\\\\Expermental\\\\nft\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"H:\\\\Expermental\\\\nft\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"H:\\\\Expermental\\\\nft\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"H:\\\\Expermental\\\\nft\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"H:\\\\Expermental\\\\nft\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"H:\\\\Expermental\\\\nft\\\\src\\\\components\\\\EtherbrightPixelDisplay.js\";\nimport React, { Component } from 'react';\nimport { Animate } from 'react-move'; // import { SvgLoader, SvgProxy } from 'react-svgmt';\n\nimport { interpolate, interpolateTransformSvg } from 'd3-interpolate';\nimport { Pixel } from './App.js';\n\nvar EtherbrightPixelDisplay = /*#__PURE__*/function (_Component) {\n  _inherits(EtherbrightPixelDisplay, _Component);\n\n  function EtherbrightPixelDisplay(props) {\n    var _this;\n\n    _classCallCheck(this, EtherbrightPixelDisplay);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(EtherbrightPixelDisplay).call(this, props));\n\n    _this.pixelClickHandler = function (e, id) {\n      console.log(\"Pix N \", e.target.getAttributeNS(null, \"pn\"));\n      console.log(\"Color \", e.target.getAttributeNS(null, \"fill\"));\n      console.log(\"ID \", e.target.getAttributeNS(null, \"id\"));\n    };\n\n    _this.togglePlay = function () {\n      // return{\n      // playing:prevState.playing ? 0:1\n      var play = _this.state.playing ? 0 : 1;\n\n      _this.setState({\n        playing: play\n      }); // }\n      // this.setState\n\n    };\n\n    _this.state = {\n      pixels: props.pixels,\n      pallet: props.pallet,\n      movie: props.movie,\n      id: props.id,\n      movieFrame: props.movie[props.movie.length],\n      frameNumber: props.movie.length - 1,\n      playing: props.playing,\n      c1: \"#00ff00\",\n      c2: \"#ff00ff\",\n      cnt: 0\n    };\n    console.log(\"PLAYING \", _this.state.playing);\n    return _this;\n  }\n\n  _createClass(EtherbrightPixelDisplay, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      //Use React Move to animate the body\n      // this.setState({playing:0})\n      setInterval(function () {\n        _this2.setState(_this2.changecolor);\n      }, 1000);\n      setInterval(function () {\n        _this2.setState(_this2.updateMovieFrame);\n      }, 1000);\n    }\n  }, {\n    key: \"changecolor\",\n    value: function changecolor(prevState) {\n      // console.log(\"JUMP \",this.state.c1);\n      return {\n        c1: this.state.pallet[this.state.cnt % 6],\n        cnt: prevState.cnt + 1\n      };\n    }\n  }, {\n    key: \"updateMovieFrame\",\n    value: function updateMovieFrame(prevState) {\n      // console.log(this.state.frameNumber)\n      if (this.state.playing) {\n        return {\n          movieFrame: this.state.movie[this.state.frameNumber],\n          frameNumber: (prevState.frameNumber + 1) % this.state.movie.length\n        };\n      } else {\n        return {\n          movieFrame: this.state.movie[this.state.frameNumber],\n          frameNumber: (prevState.frameNumber + 0) % this.state.movie.length\n        };\n      }\n    }\n  }, {\n    key: \"getCircle\",\n    value: function getCircle(n, x, y, c) {\n      var _this3 = this;\n\n      return React.createElement(\"circle\", {\n        key: n,\n        id: this.state.id.toHexString(),\n        pn: n,\n        cx: x,\n        cy: y,\n        r: \"20\",\n        fill: c,\n        strokeWidth: \"8\",\n        stroke: \"black\",\n        onClick: function onClick(e) {\n          _this3.pixelClickHandler(e, _this3.state.id);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      });\n    }\n  }, {\n    key: \"getSVG\",\n    value: function getSVG() {\n      var _this4 = this;\n\n      return React.createElement(\"svg\", {\n        width: \"300\",\n        height: \"300\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }, this.state.pixels.map(function (pix) {\n        return _this4.getCircle(pix.id, pix.xpos, pix.ypos, pix.color);\n      }));\n    }\n  }, {\n    key: \"animatedSVG_TEST\",\n    value: function animatedSVG_TEST() {\n      return React.createElement(\"svg\", {\n        width: \"300\",\n        height: \"300\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }, React.createElement(Animate, {\n        start: {\n          c: this.state.c1\n        },\n        enter: {\n          c: this.state.c1\n        },\n        update: {\n          c: this.state.c1\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }, function (data) {\n        {\n          /*console.log(\"DATA \",data.c);*/\n        }\n        return React.createElement(\"circle\", {\n          cx: \"50\",\n          cy: \"50\",\n          r: \"20\",\n          fill: data.c,\n          strokeWidth: \"8\",\n          stroke: \"black\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 89\n          },\n          __self: this\n        });\n      }));\n    }\n  }, {\n    key: \"animatedPxielDisplay\",\n    value: function animatedPxielDisplay() {\n      var _this5 = this;\n\n      var xoff = 50;\n      var yoff = 50;\n      var p = 0;\n      var pixels = [];\n\n      for (var x = 1; x <= 5; x++) {\n        for (var y = 1; y <= 5; y++) {\n          pixels.push(new Pixel(p, xoff * x, yoff * y, this.state.movie[this.state.frameNumber][p]));\n          p++;\n        }\n      }\n\n      return React.createElement(\"svg\", {\n        width: \"300\",\n        height: \"300\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112\n        },\n        __self: this\n      }, pixels.map(function (pix) {\n        return _this5.getCircle(pix.id, pix.xpos, pix.ypos, pix.color);\n      }));\n    }\n  }, {\n    key: \"getPlayButton\",\n    value: function getPlayButton() {\n      return React.createElement(\"button\", {\n        onClick: this.togglePlay,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120\n        },\n        __self: this\n      }, \"PLAY\");\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return (// this.getSVG()\n        React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 136\n          },\n          __self: this\n        }, this.animatedPxielDisplay(), React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 138\n          },\n          __self: this\n        }, this.getPlayButton()))\n      );\n    }\n  }]);\n\n  return EtherbrightPixelDisplay;\n}(Component);\n\nexport { EtherbrightPixelDisplay as default };","map":{"version":3,"sources":["H:/Expermental/nft/src/components/EtherbrightPixelDisplay.js"],"names":["React","Component","Animate","interpolate","interpolateTransformSvg","Pixel","EtherbrightPixelDisplay","props","pixelClickHandler","e","id","console","log","target","getAttributeNS","togglePlay","play","state","playing","setState","pixels","pallet","movie","movieFrame","length","frameNumber","c1","c2","cnt","setInterval","changecolor","updateMovieFrame","prevState","n","x","y","c","toHexString","map","pix","getCircle","xpos","ypos","color","data","xoff","yoff","p","push","animatedPxielDisplay","getPlayButton"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { Animate } from 'react-move';\r\n// import { SvgLoader, SvgProxy } from 'react-svgmt';\r\nimport { interpolate, interpolateTransformSvg } from 'd3-interpolate'\r\nimport {Pixel} from './App.js'\r\n\r\nexport default class EtherbrightPixelDisplay extends Component{\r\n\tconstructor(props){\r\n\t\tsuper(props);\r\n\t\tthis.state={\r\n\t\tpixels: props.pixels,\r\n\t\tpallet: props.pallet,\r\n\t\tmovie: props.movie,\r\n\t\tid:props.id,\r\n\t\tmovieFrame:props.movie[props.movie.length],\r\n\t\tframeNumber:props.movie.length-1,\r\n\t\tplaying:props.playing,\r\n\t\tc1:\"#00ff00\",\r\n\t\tc2:\"#ff00ff\",\r\n\t\tcnt:0,\r\n\t\t};\r\n\t\t\t\tconsole.log(\"PLAYING \",this.state.playing)\r\n\r\n\t}\r\n\tcomponentDidMount() {\r\n    //Use React Move to animate the body\r\n    \t \t\t// this.setState({playing:0})\r\n\r\n\t    setInterval(() => {\r\n\t      this.setState(this.changecolor);\r\n\t    }, 1000);\r\n\r\n\t   \tsetInterval(() => {\r\n\t      this.setState(this.updateMovieFrame);\r\n\t    }, 1000);\r\n\t}\r\n\tchangecolor(prevState){\r\n\t\t// console.log(\"JUMP \",this.state.c1);\r\n\t\treturn{c1:this.state.pallet[this.state.cnt%6], cnt:prevState.cnt+1};\r\n\r\n\t}\r\n\tupdateMovieFrame(prevState){\r\n\t\t// console.log(this.state.frameNumber)\r\n\t\tif(this.state.playing){\r\n\t\t\treturn{\r\n\t\t\t\tmovieFrame:this.state.movie[this.state.frameNumber],\r\n\t\t\t\tframeNumber:(prevState.frameNumber+1)%this.state.movie.length\r\n\t\t\t}\r\n\t\t}else{\r\n\t\t\t\t\treturn{\r\n\t\t\t\tmovieFrame:this.state.movie[this.state.frameNumber],\r\n\t\t\t\tframeNumber:(prevState.frameNumber+0)%this.state.movie.length\r\n\t\t\t}\t\r\n\t\t}\r\n\r\n\t}\r\n\tpixelClickHandler=(e,id)=>{\r\n\t\tconsole.log(\"Pix N \",e.target.getAttributeNS(null,\"pn\"))\r\n  \t\tconsole.log(\"Color \",e.target.getAttributeNS(null,\"fill\"))\r\n  \t\tconsole.log(\"ID \",e.target.getAttributeNS(null,\"id\"))\r\n\t}\r\n\r\n\tgetCircle(n,x,y,c){\r\n\r\n\t    return(\r\n\t      <circle key={n} id={this.state.id.toHexString()} pn={n} cx={x} cy={y} r='20' fill={c} strokeWidth='8' stroke='black' onClick  ={(e) => {this.pixelClickHandler(e,this.state.id);}} />\r\n\t    )\r\n\t}\r\n\t getSVG(){\r\n  \t\treturn(\r\n\t\t\t<svg width='300' height='300'>\r\n\t          {this.state.pixels.map(pix=>(this.getCircle(pix.id, pix.xpos, pix.ypos, pix.color) ))}\r\n\t        </svg>\r\n        )\r\n\t }\r\n\r\n\r\n\t animatedSVG_TEST(){\r\n\t \treturn(\r\n\t        <svg width=\"300\" height=\"300\">\r\n\t          <Animate\r\n\t            start={{ c: this.state.c1 }}\r\n\t            enter={{ c: this.state.c1 }}\r\n\t            update={{ c: this.state.c1 }}\r\n\t          >\r\n\t            {(data) => {\r\n\t            \t{/*console.log(\"DATA \",data.c);*/}\r\n\t            \treturn(\r\n\t            \t\t<circle cx=\"50\" cy=\"50\" r=\"20\" fill={data.c} strokeWidth='8' stroke='black' />\r\n\t            \t)\r\n\t            \t}\r\n\t        \t}\r\n\r\n\t          </Animate>\r\n\t        </svg>\r\n \t\t)\r\n\t }\r\n\r\n\t animatedPxielDisplay(){\r\n                   var xoff=50;\r\n        var yoff=50;\r\n        var p=0;\r\n        var pixels=[];\r\n        for(var x=1; x<=5; x++){\r\n          for(var y=1; y<=5; y++){\r\n            pixels.push(new Pixel(p,xoff*x,yoff*y,this.state.movie[this.state.frameNumber][p]))\r\n            p++;\r\n          }\r\n        }\r\n\t \treturn(\r\n\r\n\t        <svg width='300' height='300'>\r\n\t          {pixels.map(pix=>(this.getCircle(pix.id, pix.xpos, pix.ypos, pix.color) ))}\r\n\t        </svg>\r\n\t \t)\r\n\t }\r\n\r\n\t getPlayButton(){\r\n\t \treturn(\r\n            <button onClick={this.togglePlay}>PLAY</button>\r\n\r\n\t \t\t)\r\n\t }\r\n\t togglePlay=()=>{\r\n\t \t// return{\r\n\t \t\t// playing:prevState.playing ? 0:1\r\n\t \t\tvar play=this.state.playing ? 0:1\r\n\t \t\tthis.setState({playing:play})\r\n\t \t// }\r\n\t \t// this.setState\r\n\t }\r\n\r\n\trender(){\r\n\t\treturn(\r\n\t\t\t// this.getSVG()\r\n\t\t\t<div >\r\n\t\t\t{this.animatedPxielDisplay()}\r\n\t\t\t<div >\r\n\t\t\t{this.getPlayButton()}\r\n\t\t\t</div>\r\n\t\t\t</div>\r\n\r\n\t    )\r\n\r\n\t}\r\n\r\n\r\n\r\n}"]},"metadata":{},"sourceType":"module"}