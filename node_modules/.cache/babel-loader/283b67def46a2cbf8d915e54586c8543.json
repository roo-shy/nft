{"ast":null,"code":"import _regeneratorRuntime from \"H:\\\\Expermental\\\\nft\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"H:\\\\Expermental\\\\nft\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _toConsumableArray from \"H:\\\\Expermental\\\\nft\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"H:\\\\Expermental\\\\nft\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"H:\\\\Expermental\\\\nft\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"H:\\\\Expermental\\\\nft\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"H:\\\\Expermental\\\\nft\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"H:\\\\Expermental\\\\nft\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"H:\\\\Expermental\\\\nft\\\\src\\\\components\\\\App.js\";\nimport React, { Component } from 'react';\nimport { ReactSVG } from 'react-svg';\nimport logo from '../logo.png';\nimport './App.css';\nimport Web3 from 'web3';\nimport Color from '../abis/Color.json';\n\nvar App = /*#__PURE__*/function (_Component) {\n  _inherits(App, _Component);\n\n  function App(props) {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this, props));\n\n    _this.mint = function (color) {\n      _this.state.contract.methods.mint(color).send({\n        from: _this.state.account,\n        gas: 3000000\n      }) //gas must be set with each call for Ganche-cli\n      .on('receipt', function (receipt) {\n        // console.log(\"got mints receipt\")\n        _this.setState({\n          colors: [].concat(_toConsumableArray(_this.state.colors), [color])\n        });\n      }); // var nTokens=  this.state.contract.methods.totalSupply().call();\n      // for (var i = 0; i <nTokens; i++) {\n      //   console.log(\"getalldis \",i)\n      // }\n\n    };\n\n    _this.mintEtherbright = function () {\n      _this.state.contract.methods.mintEtherbright(_this.state.account).send({\n        from: _this.state.account,\n        gas: 3000000\n      });\n    };\n\n    _this.getAllTokenId = function () {\n      // var nTokens=this.state.contract.methods.totalSupply().call();\n      // for (var i = 0; i <nTokens; i++) {\n      //   console.log(\"getalldis \",i)\n      // }\n      _this.state.contract.methods.totalSupply().call().then(function (totalSupply) {\n        console.log(\"Total Supply with a promise:\", totalSupply);\n      });\n    };\n\n    _this.setPixelColor = function (n, color) {\n      _this.state.contract.methods.setPixel(n, color).send({\n        from: _this.state.account,\n        gas: 3000000\n      });\n    };\n\n    _this.state = {\n      account: '',\n      contract: null,\n      totalSupply: 1,\n      svg: '',\n      colors: [],\n      allEtherbrights: []\n    };\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"loadWeb3\",\n    value: function () {\n      var _loadWeb = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                console.log(\"loadWeb3\");\n\n                if (!window.ethereum) {\n                  _context.next = 8;\n                  break;\n                }\n\n                console.log(\"loadWeb3  ETH\"); // window.web3 = new Web3(window.ethereum)\n\n                window.web3 = new Web3(new Web3.providers.WebsocketProvider('ws://localhost:8545'));\n                _context.next = 6;\n                return window.ethereum.enable();\n\n              case 6:\n                _context.next = 9;\n                break;\n\n              case 8:\n                if (window.web3) {\n                  console.log(\"loadWeb3  WEB3\"); // window.web3 = new Web3(window.web3.currentProvider)\n\n                  window.web3 = new Web3(new Web3.providers.WebsocketProvider('ws://localhost:8545'));\n                } else {\n                  window.alert('Non-Ethereum browser detected. You should consider trying MetaMask!');\n                }\n\n              case 9:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      function loadWeb3() {\n        return _loadWeb.apply(this, arguments);\n      }\n\n      return loadWeb3;\n    }()\n  }, {\n    key: \"componentWillMount\",\n    value: function () {\n      var _componentWillMount = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                console.log(\"loadingWeb3\");\n                _context2.next = 3;\n                return this.loadWeb3();\n\n              case 3:\n                console.log(\"loadBlockchainData\");\n                _context2.next = 6;\n                return this.loadBlockchainData();\n\n              case 6:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function componentWillMount() {\n        return _componentWillMount.apply(this, arguments);\n      }\n\n      return componentWillMount;\n    }()\n  }, {\n    key: \"loadBlockchainData\",\n    value: function () {\n      var _loadBlockchainData = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3() {\n        var _this2 = this;\n\n        var web3, accounts, networkId, networkData, abi, address, returnContract, testreturn, returntotalSupply, returnSVG, i, color;\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                // console.log(\"A\")\n                web3 = window.web3; // Load account\n\n                _context3.next = 3;\n                return web3.eth.getAccounts();\n\n              case 3:\n                accounts = _context3.sent;\n                //gets accout from metamask\n                this.setState({\n                  account: accounts[0]\n                }); //state store property values of a componet and when the state chages the componet re-renders\n                // console.log(\"B\",accounts[0])\n\n                _context3.next = 7;\n                return web3.eth.net.getId();\n\n              case 7:\n                networkId = _context3.sent;\n                //detercts the eth network \n                // console.log(\"C\",networkId)\n                networkData = Color.networks[networkId]; //gets the contracts address on the network\n                // console.log(\"D\")\n\n                console.log(\"netowrkdata\", networkId);\n\n                if (!networkData) {\n                  _context3.next = 51;\n                  break;\n                }\n\n                //if it has an addres\n                abi = Color.abi; //creates a JS version of the contract with its abi\n\n                address = networkData.address; //its actual address?\n\n                console.log(\"networkData:\", networkData);\n                console.log(\"addy\", address);\n                console.log(\"abi:\", abi);\n                returnContract = new web3.eth.Contract(abi, address); //creates a new version of this contract\n                // web3.eth.defaultAccount(address);\n                // const returnContract = new web3.eth.Contract(abi);\n\n                this.setState({\n                  contract: returnContract\n                }); //sets it in state obj\n                // console.log(\"contractName:\",returnContract.contractName);\n\n                console.log(\"contract:\", this.state.contract);\n                console.log(\"calling test return\");\n                testreturn = returnContract.methods.testReturn(\"this is a test\").call({\n                  from: this.state.account\n                });\n                console.log(\"testreturn \", testreturn);\n                console.log(\"calling totalssupply\");\n                _context3.next = 25;\n                return returnContract.methods.totalSupply().call();\n\n              case 25:\n                returntotalSupply = _context3.sent;\n                _context3.next = 28;\n                return returnContract.methods.generateSVG().call();\n\n              case 28:\n                returnSVG = _context3.sent;\n                this.setState({\n                  svg: returnSVG\n                }); // const tmp=\"<svg><circle cx=\"50\" cy=\"50\" r=\"20\" fill=\"#ff0000\" stroke-width=\"9\" stroke=\"black\"/></svg>\"\n                // this.setState({svg:\"<svg width='100' height='100'><circle cx='50' cy='50' r='20' fill='#ffff00' stroke-width='9' stroke='black'/></svg>\"})\n\n                console.log(\"SVG: \", this.state.svg);\n                returnContract.events.SVGgenerated().on('data', function (event) {\n                  console.log(\"SVG EVENT \", event);\n\n                  _this2.setState({\n                    svg: event.returnValues[0]\n                  });\n                }).on('error', console.error);\n                returnContract.events.PixelChanged().on('data', function (event) {\n                  console.log(\"PIXEL CHANGED EVENT \", event.returnValues[0]);\n                }).on('error', console.error);\n                returnContract.events.EtherbrightMinted().on('data', function (event) {\n                  console.log(\"Etherbright Minted \", event);\n                }).on('error', console.error); // const junk= await returnContract.methods.getjunk().call()\n                // console.log(\"junk \",junk)\n                // const mintreturn= await returnContract.methods.mint(\"poop\").call()\n                // console.log(\"mintreturn \",mintreturn)\n\n                console.log(\"returntotalsupply\", returntotalSupply.toString());\n                console.log(\"state total supply\", this.state.totalSupply);\n                this.setState({\n                  totalSupply: returntotalSupply\n                }); //sets state var\n\n                returnContract.events.Transfer().on('data', function (event) {\n                  console.log(\"GOT EVENT\");\n                  console.log(event);\n                }).on('error', console.error);\n                returnContract.getPastEvents('PixelChanged', {\n                  fromBlock: 0,\n                  toBlock: 'latest'\n                }, function (error, events) {\n                  console.log(events);\n                }).then(function (events) {\n                  console.log(events); // same results as the optional callback above\n                });\n                returnContract.getPastEvents('SVGgenerated', {\n                  fromBlock: 0,\n                  toBlock: 'latest'\n                }, function (error, events) {\n                  console.log(events); // returnSVG= returnContract.methods.generateSVG().call();\n                  // this.setState({svg:returnSVG});\n                }).then(function (events) {\n                  console.log(events); // same results as the optional callback above\n                }); // Load Colors\n\n                i = 1;\n\n              case 41:\n                if (!(i <= returntotalSupply)) {\n                  _context3.next = 49;\n                  break;\n                }\n\n                _context3.next = 44;\n                return returnContract.methods.colors(i - 1).call();\n\n              case 44:\n                color = _context3.sent;\n                this.setState({\n                  colors: [].concat(_toConsumableArray(this.state.colors), [color])\n                });\n\n              case 46:\n                i++;\n                _context3.next = 41;\n                break;\n\n              case 49:\n                _context3.next = 52;\n                break;\n\n              case 51:\n                window.alert('Smart contract not deployed to detected network.');\n\n              case 52:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n\n      function loadBlockchainData() {\n        return _loadBlockchainData.apply(this, arguments);\n      }\n\n      return loadBlockchainData;\n    }() //javascript arrow function =>\n    // () define the list of pramaters followed by \"fat arrow\" => and {} that delimit the functions body\n    // ... is spread syntax which expands an iterable like an array or string \n    //\n    // this callwebs the mint method in the contract with seend passing the accout\n    // .once is a promiss event that watches for events like'receipt' and then can call a function with it\n    // when we get a receipt event we call setstate and add the color we justed mined to the list\n    // //#dc34eb\n    //   mint = (color) => {\n    //     this.state.contract.methods\n    //         // this.state.contract\n    //     .mint(color)\n    //     .send({ from: this.state.account })\n    //     .once('receipt',\n    //        (receipt) => {\n    //           this.setState(\n    //             {\n    //             colors: [...this.state.colors, color]\n    //             }\n    //           )\n    //         }\n    //     )\n    //   }\n\n  }, {\n    key: \"render\",\n    // mint = (color) => {\n    //   this.state.contract.mint(color)\n    //   .call({from: this.state.account})\n    //   .once('receipt',\n    //      (receipt) => {\n    //         this.setState(\n    //           {\n    //           colors: [...this.state.colors, color]\n    //           }\n    //         )\n    //       }\n    //   )\n    // }\n    value: function render() {\n      var _this3 = this;\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 239\n        },\n        __self: this\n      }, React.createElement(\"nav\", {\n        className: \"navbar navbar-dark fixed-top bg-dark flex-md-nowrap p-0 shadow\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 240\n        },\n        __self: this\n      }, React.createElement(\"a\", {\n        className: \"navbar-brand col-sm-3 col-md-2 mr-0\",\n        href: \"http://www.TheEverbright.com\",\n        target: \"_blank\",\n        rel: \"noopener noreferrer\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 241\n        },\n        __self: this\n      }, \"Etherbright\"), React.createElement(\"ul\", {\n        className: \"navbar-nav px-3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 249\n        },\n        __self: this\n      }, React.createElement(\"li\", {\n        className: \"nav-item text-nowrap d-none d-sm-none d-sm-block\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 250\n        },\n        __self: this\n      }, React.createElement(\"small\", {\n        className: \"text-white\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 251\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        id: \"account\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 251\n        },\n        __self: this\n      }, this.state.account))))), React.createElement(\"div\", {\n        className: \"container-fluid mt-5\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 255\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 256\n        },\n        __self: this\n      }, React.createElement(\"main\", {\n        role: \"main\",\n        className: \"col-lg-12 d-flex text-center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 257\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"content mr-auto ml-auto\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 258\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 259\n        },\n        __self: this\n      }, \"setPixelColor\"), React.createElement(\"form\", {\n        onSubmit: function onSubmit(event) {\n          event.preventDefault();\n          var color = _this3.color.value;\n          var n = _this3.n.value;\n\n          _this3.setPixelColor(n, color);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 260\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"text\",\n        className: \"form-control mb-1\",\n        placeholder: \"e.g. #FFFFFF\",\n        ref: function ref(input) {\n          _this3.color = input;\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 266\n        },\n        __self: this\n      }), React.createElement(\"input\", {\n        type: \"text\",\n        className: \"form-control mb-1\",\n        placeholder: \"pixel number\",\n        ref: function ref(input) {\n          _this3.n = input;\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 272\n        },\n        __self: this\n      }), React.createElement(\"input\", {\n        type: \"submit\",\n        className: \"btn btn-block btn-primary\",\n        value: \"SET PIXEL COLOR\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 278\n        },\n        __self: this\n      }))))), React.createElement(\"hr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 287\n        },\n        __self: this\n      }), React.createElement(\"button\", {\n        onClick: this.mintEtherbright,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 288\n        },\n        __self: this\n      }, \"mint etherbright\"), React.createElement(\"hr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 289\n        },\n        __self: this\n      }), React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 290\n        },\n        __self: this\n      }, \"JUNK\"), React.createElement(\"div\", {\n        dangerouslySetInnerHTML: {\n          __html: this.state.svg\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 291\n        },\n        __self: this\n      }), \"; // return(\", this.state.svg, \") // \", React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 295\n        },\n        __self: this\n      }, \"more 2JUNK\"), \"// \", React.createElement(\"svg\", {\n        width: \"100\",\n        height: \"100\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 296\n        },\n        __self: this\n      }, \"// \", React.createElement(\"circle\", {\n        cx: \"50\",\n        cy: \"50\",\n        r: \"20\",\n        fill: \"#ffff00\",\n        \"stroke-width\": \"9\",\n        stroke: \"black\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 297\n        },\n        __self: this\n      }), \"// \"), React.createElement(\"hr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 299\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"row text-center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 300\n        },\n        __self: this\n      }, this.state.colors.map(function (color, key) {\n        return React.createElement(\"div\", {\n          key: key,\n          className: \"col-md-3 mb-3\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 304\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"token\",\n          style: {\n            backgroundColor: color\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 305\n          },\n          __self: this\n        }), React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 306\n          },\n          __self: this\n        }, color));\n      }))));\n    } // render() {\n    //   return (\n    //     <div>\n    //       <nav className=\"navbar navbar-dark fixed-top bg-dark flex-md-nowrap p-0 shadow\">\n    //         <a\n    //           className=\"navbar-brand col-sm-3 col-md-2 mr-0\"\n    //           href=\"http://www.TheEverbright.com\"\n    //           target=\"_blank\"\n    //           rel=\"noopener noreferrer\"\n    //         >\n    //           Etherbright\n    //         </a>\n    //       </nav>\n    //       <div className=\"container-fluid mt-5\">\n    //         <div className=\"row\">\n    //           <main role=\"main\" className=\"col-lg-12 d-flex text-center\">\n    //             <div className=\"content mr-auto ml-auto\">\n    //               <a\n    //                 href=\"http://www.TheEverbright.com\"\n    //                 target=\"_blank\"\n    //                 rel=\"noopener noreferrer\"\n    //               >\n    //                 <img src={logo} className=\"App-logo\" alt=\"logo\" />\n    //               </a>\n    //               <h1>Etherbright Beta</h1>\n    //               <p>\n    //                 Edit <code>src/components/App.js</code> and save to reload.\n    //               </p>\n    //               <a\n    //                 className=\"App-link\"\n    //                 href=\"http://www.TheEverbright.com\"\n    //                 target=\"_blank\"\n    //                 rel=\"noopener noreferrer\"\n    //               >\n    //                 Etherbright!\n    //               </a>\n    //             </div>\n    //           </main>\n    //         </div>\n    //       </div>\n    //     </div>\n    //   );\n    // }\n\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["H:/Expermental/nft/src/components/App.js"],"names":["React","Component","ReactSVG","logo","Web3","Color","App","props","mint","color","state","contract","methods","send","from","account","gas","on","receipt","setState","colors","mintEtherbright","getAllTokenId","totalSupply","call","then","console","log","setPixelColor","n","setPixel","svg","allEtherbrights","window","ethereum","web3","providers","WebsocketProvider","enable","alert","loadWeb3","loadBlockchainData","eth","getAccounts","accounts","net","getId","networkId","networkData","networks","abi","address","returnContract","Contract","testreturn","testReturn","returntotalSupply","generateSVG","returnSVG","events","SVGgenerated","event","returnValues","error","PixelChanged","EtherbrightMinted","toString","Transfer","getPastEvents","fromBlock","toBlock","i","preventDefault","value","input","__html","map","key","backgroundColor"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { ReactSVG } from 'react-svg'\r\nimport logo from '../logo.png';\r\nimport './App.css';\r\nimport Web3 from 'web3';\r\nimport Color from '../abis/Color.json'\r\n\r\n\r\nclass App extends Component {\r\n\r\n  constructor(props){\r\n    super(props)\r\n    this.state={\r\n      account:'',\r\n      contract: null,\r\n      totalSupply: 1,\r\n      svg:'', \r\n      colors: [],\r\n      allEtherbrights: []\r\n    }\r\n  }\r\n\r\n  async loadWeb3() {\r\n      console.log(\"loadWeb3\");\r\n\r\n    if (window.ethereum) {\r\n            console.log(\"loadWeb3  ETH\");\r\n\r\n      // window.web3 = new Web3(window.ethereum)\r\n            window.web3 = new Web3(new Web3.providers.WebsocketProvider('ws://localhost:8545'))\r\n\r\n      await window.ethereum.enable()\r\n    }\r\n    else if (window.web3) {\r\n                  console.log(\"loadWeb3  WEB3\");\r\n\r\n      // window.web3 = new Web3(window.web3.currentProvider)\r\n      window.web3 = new Web3(new Web3.providers.WebsocketProvider('ws://localhost:8545'))\r\n    }\r\n    else {\r\n      window.alert('Non-Ethereum browser detected. You should consider trying MetaMask!')\r\n    }\r\n  }\r\n\r\n  async componentWillMount() {\r\n    console.log(\"loadingWeb3\")\r\n    await this.loadWeb3()\r\n    console.log(\"loadBlockchainData\")\r\n    await this.loadBlockchainData()\r\n  }\r\n  async loadBlockchainData() {\r\n    // console.log(\"A\")\r\n    const web3 = window.web3\r\n    // Load account\r\n    const accounts = await web3.eth.getAccounts() //gets accout from metamask\r\n    this.setState({ account: accounts[0] })//state store property values of a componet and when the state chages the componet re-renders\r\n        // console.log(\"B\",accounts[0])\r\n    const networkId = await web3.eth.net.getId() //detercts the eth network \r\n        // console.log(\"C\",networkId)\r\n    const networkData = Color.networks[networkId] //gets the contracts address on the network\r\n        // console.log(\"D\")\r\n    console.log(\"netowrkdata\",networkId)\r\n    if(networkData) {//if it has an addres\r\n      const abi = Color.abi //creates a JS version of the contract with its abi\r\n      const address = networkData.address //its actual address?\r\n      console.log(\"networkData:\",networkData);\r\n      console.log(\"addy\",address);\r\n      console.log(\"abi:\",abi);\r\n\r\n      const returnContract = new web3.eth.Contract(abi, address)//creates a new version of this contract\r\n      // web3.eth.defaultAccount(address);\r\n      // const returnContract = new web3.eth.Contract(abi);\r\n      this.setState({ contract:returnContract })//sets it in state obj\r\n      // console.log(\"contractName:\",returnContract.contractName);\r\n      console.log(\"contract:\",this.state.contract)\r\n      console.log(\"calling test return\")\r\n      const testreturn=returnContract.methods.testReturn(\"this is a test\").call({from: this.state.account})\r\n      console.log(\"testreturn \",testreturn)\r\n      console.log(\"calling totalssupply\")\r\n      const returntotalSupply = await returnContract.methods.totalSupply().call()//calls a contracts method\r\n      var returnSVG = await returnContract.methods.generateSVG().call()\r\n      this.setState({svg:returnSVG})\r\n      // const tmp=\"<svg><circle cx=\"50\" cy=\"50\" r=\"20\" fill=\"#ff0000\" stroke-width=\"9\" stroke=\"black\"/></svg>\"\r\n\r\n      // this.setState({svg:\"<svg width='100' height='100'><circle cx='50' cy='50' r='20' fill='#ffff00' stroke-width='9' stroke='black'/></svg>\"})\r\n      console.log(\"SVG: \",this.state.svg)\r\n\r\n\r\n      returnContract.events.SVGgenerated()\r\n      .on('data', (event) => {\r\n        console.log(\"SVG EVENT \",event);\r\n        this.setState({svg:event.returnValues[0]})\r\n      })\r\n      .on('error', console.error)\r\n\r\n      returnContract.events.PixelChanged()\r\n      .on('data', (event) => {\r\n        console.log(\"PIXEL CHANGED EVENT \",event.returnValues[0]);\r\n      })\r\n      .on('error', console.error)\r\n\r\n      returnContract.events.EtherbrightMinted()\r\n      .on('data', (event) => {\r\n        console.log(\"Etherbright Minted \",event);\r\n      })\r\n      .on('error', console.error)\r\n// const junk= await returnContract.methods.getjunk().call()\r\n// console.log(\"junk \",junk)\r\n// const mintreturn= await returnContract.methods.mint(\"poop\").call()\r\n// console.log(\"mintreturn \",mintreturn)\r\n\r\n      console.log(\"returntotalsupply\",returntotalSupply.toString())\r\n      console.log(\"state total supply\",this.state.totalSupply)\r\n      this.setState({ totalSupply:returntotalSupply }) //sets state var\r\n\r\n      returnContract.events.Transfer()\r\n      .on('data', (event) =>{console.log(\"GOT EVENT\");console.log(event);})\r\n      .on('error',console.error);\r\n\r\n      returnContract.getPastEvents('PixelChanged', {\r\n          fromBlock: 0,\r\n          toBlock: 'latest'\r\n      }, function(error, events){ console.log(events); })\r\n      .then(function(events){\r\n          console.log(events) // same results as the optional callback above\r\n      });\r\n\r\n\r\n      returnContract.getPastEvents('SVGgenerated', {\r\n          fromBlock: 0,\r\n          toBlock: 'latest'\r\n      }, function(error, events){ \r\n          console.log(events); \r\n          // returnSVG= returnContract.methods.generateSVG().call();\r\n          // this.setState({svg:returnSVG});\r\n\r\n         })\r\n      .then(function(events){\r\n          console.log(events) // same results as the optional callback above\r\n      });\r\n\r\n\r\n\r\n      // Load Colors\r\n      for (var i = 1; i <= returntotalSupply; i++) {\r\n        const color = await returnContract.methods.colors(i - 1).call()\r\n        this.setState({\r\n          colors: [...this.state.colors, color]\r\n        })\r\n      }\r\n    } else {\r\n      window.alert('Smart contract not deployed to detected network.')\r\n    }\r\n  }\r\n\r\n\r\n  //javascript arrow function =>\r\n  // () define the list of pramaters followed by \"fat arrow\" => and {} that delimit the functions body\r\n  // ... is spread syntax which expands an iterable like an array or string \r\n  //\r\n  // this callwebs the mint method in the contract with seend passing the accout\r\n  // .once is a promiss event that watches for events like'receipt' and then can call a function with it\r\n  // when we get a receipt event we call setstate and add the color we justed mined to the list\r\n  \r\n// //#dc34eb\r\n//   mint = (color) => {\r\n//     this.state.contract.methods\r\n//         // this.state.contract\r\n\r\n//     .mint(color)\r\n//     .send({ from: this.state.account })\r\n//     .once('receipt',\r\n//        (receipt) => {\r\n//           this.setState(\r\n//             {\r\n//             colors: [...this.state.colors, color]\r\n//             }\r\n//           )\r\n//         }\r\n//     )\r\n//   }\r\nmint = (color) => {\r\n  this.state.contract.methods.mint(color)\r\n  .send({from: this.state.account, gas:3000000 })//gas must be set with each call for Ganche-cli\r\n  .on('receipt',\r\n     (receipt) => {\r\n      // console.log(\"got mints receipt\")\r\n        this.setState(\r\n          {\r\n          colors: [...this.state.colors, color]\r\n          }\r\n        )\r\n      }\r\n  )\r\n  // var nTokens=  this.state.contract.methods.totalSupply().call();\r\n  // for (var i = 0; i <nTokens; i++) {\r\n  //   console.log(\"getalldis \",i)\r\n  // }\r\n}\r\n\r\nmintEtherbright = ()=>{\r\n  this.state.contract.methods.mintEtherbright(this.state.account)\r\n  .send({from: this.state.account ,gas:3000000})\r\n}\r\n\r\ngetAllTokenId = ()=>{\r\n  // var nTokens=this.state.contract.methods.totalSupply().call();\r\n  // for (var i = 0; i <nTokens; i++) {\r\n  //   console.log(\"getalldis \",i)\r\n  // }\r\n  this.state.contract.methods.totalSupply().call()\r\n  .then(\r\n      function(totalSupply){\r\n        console.log(\"Total Supply with a promise:\",  totalSupply);\r\n      }\r\n      )\r\n}\r\n\r\nsetPixelColor = (n, color) =>{\r\n  this.state.contract.methods.setPixel(n, color)\r\n  .send({from: this.state.account, gas:3000000})\r\n\r\n}\r\n  // mint = (color) => {\r\n  //   this.state.contract.mint(color)\r\n  //   .call({from: this.state.account})\r\n  //   .once('receipt',\r\n  //      (receipt) => {\r\n  //         this.setState(\r\n  //           {\r\n  //           colors: [...this.state.colors, color]\r\n  //           }\r\n  //         )\r\n  //       }\r\n  //   )\r\n  // }\r\nrender() {\r\n  return (\r\n    <div>\r\n      <nav className=\"navbar navbar-dark fixed-top bg-dark flex-md-nowrap p-0 shadow\">\r\n        <a\r\n          className=\"navbar-brand col-sm-3 col-md-2 mr-0\"\r\n          href=\"http://www.TheEverbright.com\"\r\n          target=\"_blank\"\r\n          rel=\"noopener noreferrer\"\r\n        >\r\n          Etherbright\r\n        </a>\r\n        <ul className=\"navbar-nav px-3\">\r\n          <li className=\"nav-item text-nowrap d-none d-sm-none d-sm-block\">\r\n            <small className=\"text-white\"><span id=\"account\">{this.state.account}</span></small>\r\n          </li>\r\n        </ul>\r\n      </nav>\r\n      <div className=\"container-fluid mt-5\">\r\n        <div className=\"row\">\r\n          <main role=\"main\" className=\"col-lg-12 d-flex text-center\">\r\n            <div className=\"content mr-auto ml-auto\">\r\n              <h1>setPixelColor</h1>\r\n              <form onSubmit={(event) => {\r\n                event.preventDefault()\r\n                const color = this.color.value\r\n                const n = this.n.value\r\n                this.setPixelColor(n,color)\r\n              }}>\r\n                <input\r\n                  type='text'\r\n                  className='form-control mb-1'\r\n                  placeholder='e.g. #FFFFFF'\r\n                  ref={(input) => { this.color = input }}\r\n                />\r\n                <input\r\n                  type='text'\r\n                  className='form-control mb-1'\r\n                  placeholder='pixel number'\r\n                  ref={(input) => { this.n = input }}\r\n                />\r\n                <input\r\n                  type='submit'\r\n                  className='btn btn-block btn-primary'\r\n                  value='SET PIXEL COLOR'\r\n                />\r\n              </form>\r\n            </div>\r\n          </main>\r\n        </div>\r\n        <hr/>\r\n        <button onClick={this.mintEtherbright}>mint etherbright</button>\r\n        <hr/>\r\n        <h1>JUNK</h1>\r\n         <div dangerouslySetInnerHTML={{__html: this.state.svg }} />;\r\n\r\n        // return({this.state.svg})\r\n \r\n        // <h1>more 2JUNK</h1>\r\n        // <svg width='100' height='100'>\r\n        // <circle cx='50' cy='50' r='20' fill='#ffff00' stroke-width='9' stroke='black'/>\r\n        // </svg>\r\n        <hr/>\r\n        <div className=\"row text-center\">\r\n\r\n          { this.state.colors.map((color, key) => {\r\n            return(\r\n              <div key={key} className=\"col-md-3 mb-3\">\r\n                <div className=\"token\" style={{ backgroundColor: color }}></div>\r\n                <div>{color}</div>\r\n              </div>\r\n            )\r\n          })}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n }\r\n  // render() {\r\n  //   return (\r\n  //     <div>\r\n  //       <nav className=\"navbar navbar-dark fixed-top bg-dark flex-md-nowrap p-0 shadow\">\r\n  //         <a\r\n  //           className=\"navbar-brand col-sm-3 col-md-2 mr-0\"\r\n  //           href=\"http://www.TheEverbright.com\"\r\n  //           target=\"_blank\"\r\n  //           rel=\"noopener noreferrer\"\r\n  //         >\r\n  //           Etherbright\r\n  //         </a>\r\n  //       </nav>\r\n  //       <div className=\"container-fluid mt-5\">\r\n  //         <div className=\"row\">\r\n  //           <main role=\"main\" className=\"col-lg-12 d-flex text-center\">\r\n  //             <div className=\"content mr-auto ml-auto\">\r\n  //               <a\r\n  //                 href=\"http://www.TheEverbright.com\"\r\n  //                 target=\"_blank\"\r\n  //                 rel=\"noopener noreferrer\"\r\n  //               >\r\n  //                 <img src={logo} className=\"App-logo\" alt=\"logo\" />\r\n  //               </a>\r\n  //               <h1>Etherbright Beta</h1>\r\n  //               <p>\r\n  //                 Edit <code>src/components/App.js</code> and save to reload.\r\n  //               </p>\r\n  //               <a\r\n  //                 className=\"App-link\"\r\n  //                 href=\"http://www.TheEverbright.com\"\r\n  //                 target=\"_blank\"\r\n  //                 rel=\"noopener noreferrer\"\r\n  //               >\r\n  //                 Etherbright!\r\n  //               </a>\r\n  //             </div>\r\n  //           </main>\r\n  //         </div>\r\n  //       </div>\r\n  //     </div>\r\n  //   );\r\n  // }\r\n}\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}