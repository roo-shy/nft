{"ast":null,"code":"import React from 'react';\nimport PropTypes from 'prop-types';\nimport reactCSS from 'reactcss';\nimport merge from 'lodash-es/merge';\nimport { ColorWrap, Saturation, Hue, Alpha, Checkboard } from '../common';\nimport ChromeFields from './ChromeFields';\nimport ChromePointer from './ChromePointer';\nimport ChromePointerCircle from './ChromePointerCircle';\nexport var Chrome = function Chrome(_ref) {\n  var width = _ref.width,\n      onChange = _ref.onChange,\n      disableAlpha = _ref.disableAlpha,\n      rgb = _ref.rgb,\n      hsl = _ref.hsl,\n      hsv = _ref.hsv,\n      hex = _ref.hex,\n      renderers = _ref.renderers,\n      _ref$styles = _ref.styles,\n      passedStyles = _ref$styles === undefined ? {} : _ref$styles,\n      _ref$className = _ref.className,\n      className = _ref$className === undefined ? '' : _ref$className,\n      defaultView = _ref.defaultView;\n  var styles = reactCSS(merge({\n    'default': {\n      picker: {\n        width: width,\n        background: '#fff',\n        borderRadius: '2px',\n        boxShadow: '0 0 2px rgba(0,0,0,.3), 0 4px 8px rgba(0,0,0,.3)',\n        boxSizing: 'initial',\n        fontFamily: 'Menlo'\n      },\n      saturation: {\n        width: '100%',\n        paddingBottom: '55%',\n        position: 'relative',\n        borderRadius: '2px 2px 0 0',\n        overflow: 'hidden'\n      },\n      Saturation: {\n        radius: '2px 2px 0 0'\n      },\n      body: {\n        padding: '16px 16px 12px'\n      },\n      controls: {\n        display: 'flex'\n      },\n      color: {\n        width: '32px'\n      },\n      swatch: {\n        marginTop: '6px',\n        width: '16px',\n        height: '16px',\n        borderRadius: '8px',\n        position: 'relative',\n        overflow: 'hidden'\n      },\n      active: {\n        absolute: '0px 0px 0px 0px',\n        borderRadius: '8px',\n        boxShadow: 'inset 0 0 0 1px rgba(0,0,0,.1)',\n        background: 'rgba(' + rgb.r + ', ' + rgb.g + ', ' + rgb.b + ', ' + rgb.a + ')',\n        zIndex: '2'\n      },\n      toggles: {\n        flex: '1'\n      },\n      hue: {\n        height: '10px',\n        position: 'relative',\n        marginBottom: '8px'\n      },\n      Hue: {\n        radius: '2px'\n      },\n      alpha: {\n        height: '10px',\n        position: 'relative'\n      },\n      Alpha: {\n        radius: '2px'\n      }\n    },\n    'disableAlpha': {\n      color: {\n        width: '22px'\n      },\n      alpha: {\n        display: 'none'\n      },\n      hue: {\n        marginBottom: '0px'\n      },\n      swatch: {\n        width: '10px',\n        height: '10px',\n        marginTop: '0px'\n      }\n    }\n  }, passedStyles), {\n    disableAlpha: disableAlpha\n  });\n  return React.createElement('div', {\n    style: styles.picker,\n    className: 'chrome-picker ' + className\n  }, React.createElement('div', {\n    style: styles.saturation\n  }, React.createElement(Saturation, {\n    style: styles.Saturation,\n    hsl: hsl,\n    hsv: hsv,\n    pointer: ChromePointerCircle,\n    onChange: onChange\n  })), React.createElement('div', {\n    style: styles.body\n  }, React.createElement('div', {\n    style: styles.controls,\n    className: 'flexbox-fix'\n  }, React.createElement('div', {\n    style: styles.color\n  }, React.createElement('div', {\n    style: styles.swatch\n  }, React.createElement('div', {\n    style: styles.active\n  }), React.createElement(Checkboard, {\n    renderers: renderers\n  }))), React.createElement('div', {\n    style: styles.toggles\n  }, React.createElement('div', {\n    style: styles.hue\n  }, React.createElement(Hue, {\n    style: styles.Hue,\n    hsl: hsl,\n    pointer: ChromePointer,\n    onChange: onChange\n  })), React.createElement('div', {\n    style: styles.alpha\n  }, React.createElement(Alpha, {\n    style: styles.Alpha,\n    rgb: rgb,\n    hsl: hsl,\n    pointer: ChromePointer,\n    renderers: renderers,\n    onChange: onChange\n  })))), React.createElement(ChromeFields, {\n    rgb: rgb,\n    hsl: hsl,\n    hex: hex,\n    view: defaultView,\n    onChange: onChange,\n    disableAlpha: disableAlpha\n  })));\n};\nChrome.propTypes = {\n  width: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  disableAlpha: PropTypes.bool,\n  styles: PropTypes.object,\n  defaultView: PropTypes.oneOf([\"hex\", \"rgb\", \"hsl\"])\n};\nChrome.defaultProps = {\n  width: 225,\n  disableAlpha: false,\n  styles: {}\n};\nexport default ColorWrap(Chrome);","map":null,"metadata":{},"sourceType":"module"}