{"ast":null,"code":"import _classCallCheck from \"H:\\\\Expermental\\\\nft\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"H:\\\\Expermental\\\\nft\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"H:\\\\Expermental\\\\nft\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"H:\\\\Expermental\\\\nft\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"H:\\\\Expermental\\\\nft\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"H:\\\\Expermental\\\\nft\\\\src\\\\components\\\\EtherbrightPixelDisplay.js\";\nimport React, { Component } from 'react';\nimport { Animate } from 'react-move';\nimport { SvgLoader, SvgProxy } from 'react-svgmt';\n\nvar EtherbrightPixelDisplay = /*#__PURE__*/function (_Component) {\n  _inherits(EtherbrightPixelDisplay, _Component);\n\n  function EtherbrightPixelDisplay(props) {\n    var _this;\n\n    _classCallCheck(this, EtherbrightPixelDisplay);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(EtherbrightPixelDisplay).call(this, props));\n    _this.state = {\n      pixels: props.pixels,\n      id: props.id\n    };\n    return _this;\n  }\n\n  _createClass(EtherbrightPixelDisplay, [{\n    key: \"getCircle\",\n    value: function getCircle(n, x, y, c) {\n      return React.createElement(\"circle\", {\n        key: n,\n        id: this.state.id.toHexString(),\n        pn: n,\n        cx: x,\n        cy: y,\n        r: \"20\",\n        fill: c,\n        strokeWidth: \"8\",\n        stroke: \"black\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 17\n        },\n        __self: this\n      });\n    }\n  }, {\n    key: \"getSVG\",\n    value: function getSVG() {\n      var _this2 = this;\n\n      return React.createElement(\"svg\", {\n        width: \"300\",\n        height: \"300\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22\n        },\n        __self: this\n      }, this.state.pixels.map(function (pix) {\n        return _this2.getCircle(pix.id, pix.xpos, pix.ypos, pix.color);\n      }));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return (// this.getSVG()\n        React.createElement(SvgLoader, {\n          svgXML: this.getSVG(),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 31\n          },\n          __self: this\n        })\n      );\n    }\n  }]);\n\n  return EtherbrightPixelDisplay;\n}(Component);\n\nexport { EtherbrightPixelDisplay as default };","map":{"version":3,"sources":["H:/Expermental/nft/src/components/EtherbrightPixelDisplay.js"],"names":["React","Component","Animate","SvgLoader","SvgProxy","EtherbrightPixelDisplay","props","state","pixels","id","n","x","y","c","toHexString","map","pix","getCircle","xpos","ypos","color","getSVG"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,YAAxB;AACA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,aAApC;;IAEqBC,uB;;;AACpB,mCAAYC,KAAZ,EAAkB;AAAA;;AAAA;;AACjB,iGAAMA,KAAN;AACA,UAAKC,KAAL,GAAW;AACXC,MAAAA,MAAM,EAAEF,KAAK,CAACE,MADH;AAEXC,MAAAA,EAAE,EAACH,KAAK,CAACG;AAFE,KAAX;AAFiB;AAMjB;;;;8BAEUC,C,EAAEC,C,EAAEC,C,EAAEC,C,EAAE;AAEhB,aACE;AAAQ,QAAA,GAAG,EAAEH,CAAb;AAAgB,QAAA,EAAE,EAAE,KAAKH,KAAL,CAAWE,EAAX,CAAcK,WAAd,EAApB;AAAiD,QAAA,EAAE,EAAEJ,CAArD;AAAwD,QAAA,EAAE,EAAEC,CAA5D;AAA+D,QAAA,EAAE,EAAEC,CAAnE;AAAsE,QAAA,CAAC,EAAC,IAAxE;AAA6E,QAAA,IAAI,EAAEC,CAAnF;AAAsF,QAAA,WAAW,EAAC,GAAlG;AAAsG,QAAA,MAAM,EAAC,OAA7G;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF;AAGD;;;6BACO;AAAA;;AACN,aACD;AAAK,QAAA,KAAK,EAAC,KAAX;AAAiB,QAAA,MAAM,EAAC,KAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACS,KAAKN,KAAL,CAAWC,MAAX,CAAkBO,GAAlB,CAAsB,UAAAC,GAAG;AAAA,eAAG,MAAI,CAACC,SAAL,CAAeD,GAAG,CAACP,EAAnB,EAAuBO,GAAG,CAACE,IAA3B,EAAiCF,GAAG,CAACG,IAArC,EAA2CH,GAAG,CAACI,KAA/C,CAAH;AAAA,OAAzB,CADT,CADC;AAKD;;;6BAEM;AACP,aACC;AACA,4BAAC,SAAD;AAAW,UAAA,MAAM,EAAE,KAAKC,MAAL,EAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAFD;AAKA;;;;EA7BmDpB,S;;SAAhCI,uB","sourcesContent":["import React, { Component } from 'react';\r\nimport { Animate } from 'react-move';\r\nimport { SvgLoader, SvgProxy } from 'react-svgmt';\r\n\r\nexport default class EtherbrightPixelDisplay extends Component{\r\n\tconstructor(props){\r\n\t\tsuper(props);\r\n\t\tthis.state={\r\n\t\tpixels: props.pixels,\r\n\t\tid:props.id,\r\n\t\t};\r\n\t}\r\n\r\n  getCircle(n,x,y,c){\r\n\r\n    return(\r\n      <circle key={n} id={this.state.id.toHexString()} pn={n} cx={x} cy={y} r='20' fill={c} strokeWidth='8' stroke='black' />\r\n    )\r\n  }\r\n  getSVG(){\r\n  \t\treturn(\r\n\t\t\t<svg width='300' height='300'>\r\n\t          {this.state.pixels.map(pix=>(this.getCircle(pix.id, pix.xpos, pix.ypos, pix.color) ))}\r\n\t        </svg>\r\n        )\r\n  }\r\n\r\n\trender(){\r\n\t\treturn(\r\n\t\t\t// this.getSVG()\r\n\t\t\t<SvgLoader svgXML={this.getSVG()}>\r\n</SvgLoader>\r\n\t    )\r\n\t}\r\n\r\n\r\n\r\n}"]},"metadata":{},"sourceType":"module"}